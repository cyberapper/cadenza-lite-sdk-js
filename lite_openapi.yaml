openapi: 3.0.3
info:
  title: Algo724 Cadenza Lite API
  description: |-
    OpenAPI Specification for Algo724 Cadenza Lite API
  version: 1.0.0
servers:
  - url: "http://localhost:8088"
    description: "Local server"
  - url: "https://cadenza-lite-dev-kxqssmzmsa-de.a.run.app"
    description: "DEV server"
  - url: "https://cadenza-lite.algo724.com"
    description: "Production server"
  - url: "https://cadenza-lite.uat.algo724.com"
    description: "UAT server"

tags:
  - name: Account
    description: "Account management"
  - name: Market
    description: "Market data"
  - name: Trade
    description: "Trade"
  - name: Portfolio
    description: "Portfolio"

paths:
  /api/v2/health:
    get:
      summary: "Health check"
      description: "Health check"
      tags:
        - Market
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successful Response
          content:
            text/plain:
              schema:
                type: string
                example: "ok"
  /api/v2/client/getInfo:
    get:
      summary: "Get user information"
      description: "Check available exchange types in user information"
      tags:
        - Account
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  exchangeTypes:
                    type: array
                    items:
                      type: string
                    description: "Available exchange types"
                    example: ["BINANCE", "B2C2", "WINTERMUTE"]
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/exchange/addExchangeAccount:
    post:
      summary: "Add exchange account"
      description: "Add exchange account"
      tags:
        - Account
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addExchangeRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/okResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/exchange/listExchangeAccounts:
    get:
      summary: "List exchange accounts"
      description: "List exchange accounts"
      tags:
        - Account
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exchangeAccount"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/exchange/updateExchangeAccount:
    post:
      summary: "Update exchange account"
      description: "Update exchange account, now only support Binance account API key and secret"
      tags:
        - Account
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateExchangeRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/okResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/exchange/removeExchangeAccount:
    post:
      summary: "Remove exchange account"
      description: "Remove exchange account, now only support Binance account API key and secret"
      tags:
        - Account
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exchangeAccountId:
                  type: string
                  format: uuid
                  description: "Exchange account ID"
              required:
                - exchangeAccountId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/okResponse"
          description: Successful Response
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/market/listSymbolInfo:
    get:
      summary: "List available exchange symbols"
      description: "List available exchange symbols"
      tags:
        - Market
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/exchangeType"
        - in: query
          name: symbol
          schema:
            type: string
            example: "BTC/USDT"
          required: false
          description: "Symbol"
        - in: query
          name: detail
          schema:
            type: boolean
            example: false
          required: false
          description: "Whether to return detailed information"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    baseSymbol:
                      type: string
                      description: Base currency
                      example: BTC
                    description:
                      type: string
                      description: Symbol description
                    exchangeType:
                      $ref: "#/components/schemas/exchangeType"
                    maxQuantity:
                      type: number
                      description: Max quantity
                    marginRate:
                      type: number
                      description: Margin rate
                    minQuantity:
                      type: number
                      description: Min quantity
                    minTick:
                      type: number
                      description: Min tick
                    orderTypes:
                      type: array
                      description: Supported order types
                      items:
                        type: string
                        enum:
                          - MARKET
                          - LIMIT
                          - STOP_LOSS
                          - STOP_LOSS_LIMIT
                          - TAKE_PROFIT
                          - TAKE_PROFIT_LIMIT
                          - LIMIT_MAKER
                          - QUOTED
                    pipSize:
                      type: number
                      description: Pip size
                    pipValue:
                      type: number
                      description: Pip value
                    pricePrecision:
                      type: integer
                      description: Price precision
                    quantityPrecision:
                      type: integer
                      description: Quantity precision
                    quantityStep:
                      type: number
                      description: Quantity step
                    quoteSymbol:
                      type: string
                      description: Quoted currency
                      example: USDT
                    securityType:
                      type: string
                      description: Security type
                      enum:
                        - CASH
                        - STOCK
                        - CRYPTO
                        - DERIVATIVE
                        - OPTION
                        - FUTURE
                        - FOREX
                        - COMMODITY
                    symbol:
                      type: string
                      description: Symbol name
                      example: BTC/USDT
                    timeInForce:
                      type: array
                      description: Supported time in force
                      items:
                        type: string
                        enum:
                          - DAY
                          - GTC
                          - GTX
                          - GTD
                          - OPG
                          - CLS
                          - IOC
                          - FOK
                          - GFA
                          - GFS
                          - GTM
                          - MOO
                          - MOC
                          - EXT
                  required:
                    - exchangeType
                    - symbol
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/market/ticker:
    get:
      summary: "Symbol price"
      description: "Symbol price"
      tags:
        - Market
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/exchangeType"
        - in: query
          name: symbol
          schema:
            type: string
            example: "BTC/USDT"
          required: true
          description: "Symbol"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ticker"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/market/orderbook:
    get:
      summary: "Order book"
      description: "Get order book"
      tags:
        - Market
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: exchangeType
          schema:
            type: string
            enum:
              - BINANCE
              - WINTERMUTE
          #              - BLOCKFILLS

          required: true
          description: "Exchange type"
        - in: query
          name: symbol
          schema:
            type: string
            example: "BTC/USDT"
          required: true
          description: "Symbol"
        - in: query
          name: limit
          schema:
            type: integer
            example: 100
          required: false
          description: "Limit the number of returned results. Default: 100; max: 1000."
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/orderbook"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/market/kline:
    get:
      summary: "Historical kline data"
      description: "Get historical kline data"
      tags:
        - Market
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: exchangeType
          schema:
            type: string
            enum:
              - BINANCE
          required: true
          description: "Exchange type"
        - in: query
          name: symbol
          schema:
            type: string
            example: BTC/USDT
          required: true
          description: "Symbol"
        - $ref: "#/components/parameters/interval"
        - in: query
          name: startTime
          schema:
            type: integer
            example: 1622505600000
          required: false
          description: "Start time (in unix milliseconds)"
        - in: query
          name: endTime
          schema:
            type: integer
            example: 1622505600000
          required: false
          description: "End time (in unix milliseconds)"
        - in: query
          name: limit
          schema:
            type: integer
            example: 100
          required: false
          description: "Limit the number of returned results. Default: 100; max: 1000."
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    c:
                      type: number
                      description: Close price
                    h:
                      type: number
                      description: High price
                    l:
                      type: number
                      description: Low price
                    o:
                      type: number
                      description: Open price
                    t:
                      type: integer
                      description: "Start time (in unix milliseconds)"
                    v:
                      type: number
                      description: Volume
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/exchange/setExchangePriority:
    post:
      summary: "Set the priority of exchanges"
      description: "Set the priority of exchanges"
      tags:
        - Trade
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "priority"
              properties:
                priority:
                  type: array
                  items:
                    type: string
                  description: Priority list of exchanges in descending order
                  example: ["my_exchange_1", "my_exchange_2", "my_exchange_3"]
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/okResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/trading/placeOrder:
    post:
      summary: "Place order"
      description: "Place order"
      tags:
        - Trade
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: Idempotency-Key
          description: |-
            Idempotency key is used to ensure that the same request is not processed more than once.
            If the same request is received again, the server will return the same response as the first time.
          schema:
            type: string
            example: "my_idempotency_key"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/placeOrderRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"

  /api/v2/trading/cancelOrder:
    post:
      summary: "Cancel order"
      description: "Cancel order. If the order is already filled, it will return an error."
      tags:
        - Trade
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: "Order ID"
              required:
                - orderId
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/trading/listOrders:
    get:
      summary: "List orders"
      description: "List orders"
      tags:
        - Trade
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: orderId
          schema:
            type: string
          description: "Order ID"
          required: false
        - in: query
          name: status
          schema:
            type: string
            enum:
              - SUBMITTED
              - OPEN
              - PARTIALLY_FILLED
              - FILLED
              - CANCELED
              - PENDING_CANCEL
              - REJECTED
              - EXPIRED
              - ERROR
              - REVOKED
          description: "Order status"
          required: false
        - in: query
          name: exchangeAccountId
          schema:
            type: string
          description: "Exchange account ID"
          required: false
        - in: query
          name: symbol
          schema:
            type: string
          description: "Symbol"
          required: false
        - in: query
          name: startTime
          schema:
            type: integer
            example: 1622505600000
          description: "Start time (in unix milliseconds)"
          required: false
        - in: query
          name: endTime
          schema:
            type: integer
            example: 1622505600000
          description: "End time (in unix milliseconds)"
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            example: 100
          description: "Limit the number of returned results. Default: 100; max: 1000."
          required: false
        - in: query
          name: offset
          schema:
            type: integer
            example: 0
          description: "Offset of the returned results. Default: 0"
          required: false
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/order"
                  limit:
                    type: integer
                    description: "Limit of the returned results"
                  offset:
                    type: integer
                    description: "Offset of the returned results"
                  total:
                    type: integer
                    description: "Total number of orders"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/trading/fetchQuotes:
    post:
      summary: "Quote request"
      description: "Quote request"
      tags:
        - Trade
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                baseCurrency:
                  type: string
                  description: Base currency
                quoteCurrency:
                  type: string
                  description: Quote currency
                quantity:
                  type: number
                  description: Quantity of base currency for quote execution
                exchangeAccountId:
                  type: string
                  format: uuid
                  description: The identifier for the exchange account
                orderSide:
                  type: string
                  description: Order side, BUY or SELL, required by WinterMute
              required:
                - baseCurrency
                - quoteCurrency
                - quantity
                - orderSide
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/quoteWithOrderCandidates"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/portfolio/listCredit:
    get:
      summary: "List credit"
      description: "List credit"
      tags:
        - Portfolio
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: exchangeAccountId
          schema:
            type: string
          description: "Exchange account ID"
          required: false
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    exchangeAcccountID:
                      type: string
                      example: "018e41a1-cebc-7b49-a729-ae2c1c41e297"
                    accountType:
                      type: string
                      example: "MARGIN"
                    maxRiskExposure:
                      type: integer
                      format: int64
                      example: 5000000
                    riskExposure:
                      type: number
                      format: double
                      example: 5677517.76
                description: "List of credit"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/portfolio/listBalances:
    get:
      summary: "List balances"
      description: "List balances"
      tags:
        - Portfolio
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: exchangeAccountId
          schema:
            type: string
          description: "Exchange account ID"
          required: false
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exchangeBalance"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/v2/portfolio/listPositions:
    get:
      summary: "List positions"
      description: "List positions"
      tags:
        - Portfolio
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: exchangeAccountId
          schema:
            type: string
          description: "Exchange account ID"
          required: false
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/exchangePosition"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"

components:
  parameters:
    arraySymbols:
      in: query
      name: symbol
      description: "List of symbols"
      schema:
        type: string
        example: "BTC/USDT,ETH/USDT"
    exchangeType:
      in: query
      name: exchangeType
      description: "Exchange type"
      schema:
        type: string
        enum:
          - BINANCE
          - B2C2
          - WINTERMUTE
    interval:
      in: query
      name: interval
      description: "Kline interval"
      schema:
        type: string
        enum:
          - 1s
          - 1m
          - 5m
          - 15m
          - 30m
          - 1h
          - 2h
          - 1d
          - 1w
      required: true
  schemas:
    okResponse:
      type: object
      properties:
        data:
          default: ok
          type: string
    errorResponse:
      type: object
      properties:
        code:
          type: integer
          description: "Error code"
        error:
          type: string
          description: "Error message"
      required:
        - code
        - error
    addExchangeRequest:
      type: object
      properties:
        exchangeType:
          $ref: "#/components/schemas/exchangeType"
        apiKey:
          type: string
          example: "my_api_key"
          description: "API key"
        apiSecret:
          type: string
          example: "my_api_secret"
          description: "API secret"
        exchangeAccountName:
          type: string
          example: "my_exchange"
          description: "Exchange account name, Available characters: a-z,
            A-Z, 0-9, _, ' '(space)"
        environment:
          type: integer
          enum:
            - 0
            - 1
          example: 0
          description: "Environment(0 - real, 1 - sandbox)"
      required:
        - exchangeType
        - apiKey
        - apiSecret
        - exchangeAccountName
        - environment
    updateExchangeRequest:
      type: object
      properties:
        exchangeAccountId:
          type: string
          format: uuid
          description: "Exchange account ID"
        exchangeAccountName:
          type: string
          example: "my_exchange"
          description: "Exchange account name, Available characters: a-z,
            A-Z, 0-9, _, ' '(space)"
        apiKey:
          type: string
          example: "my_api_key"
          description: "API key"
        apiSecret:
          type: string
          example: "my_api_secret"
          description: "API secret"
      required:
        - exchangeAccountId
    placeOrderRequest:
      type: object
      properties:
        exchangeAccountId:
          type: string
          format: uuid
          description: "Exchange account ID"
        leverage:
          description: "Levarage"
          type: integer
        orderSide:
          allOf:
            - $ref: "#/components/schemas/orderSide"
          description: Order side
        orderType:
          allOf:
            - $ref: "#/components/schemas/orderType"
          description: Order type
        positionId:
          type: string
          description: Position ID for closing position in margin trading
          format: uuid
        price:
          type: number
          description: Price
        quantity:
          type: number
          description: Quantity
        symbol:
          type: string
          description: Symbol
          example: BTC/USDT
        timeInForce:
          allOf:
            - $ref: "#/components/schemas/timeInForce"
          description: Time in force
        routePolicy:
          type: string
          enum:
            - "PRIORITY"
          description: "Route policy"
        priority:
          type: array
          items:
            type: string
          description: "Priority list of exchange account ID in descending order"
          example:
            [
              "exchange_account_id_1",
              "exchange_account_id_2",
              "exchange_account_id_3",
            ]
        quoteId:
          type: string
      required:
        - exchangeAccountId
        - orderSide
        - orderType
        - quantity
        - timeInForce
    exchangeType:
      type: string
      enum:
        - BINANCE
        - B2C2
        - WINTERMUTE
        - BLOCKFILLS
      description: "Exchange type"
    exchangeAccount:
      properties:
        accountType:
          type: string
          enum:
            - SPOT
            - MARGIN
          description: "Type of account (SPOT, MARGIN)"
        exchangeType:
          type: string
          description: "Exchange type"
        exchangeAccountId:
          type: string
          format: uuid
          description: "Exchange account ID"
        name:
          type: string
          description: "Name of the exchange account"
        environment:
          type: string
          description: "Environment of the exchange account"
        status:
          type: string
          enum:
            - ACTIVE
            - API_ERROR
            - INVALID_API
            - API_ISSUE
            - NOT_TRUSTED
            - DELETED
          description: "Status of the exchange account"
      required:
        - id
        - name
        - exchange
        - environment
        - status
        - accountType
    ticker:
      properties:
        askPrice:
          type: number
          description: Ask price
        askQuantity:
          type: number
          description: Ask quantity
        bidPrice:
          type: number
          description: Bid price
        bidQuantity:
          type: number
          description: Bid quantity
        exchangeType:
          $ref: "#/components/schemas/exchangeType"
        lastPrice:
          type: number
          description: Last price
        lastQuantity:
          type: number
          description: Last quantity
        symbol:
          type: string
          description: Symbol
          example: BTC/USDT
        timestamp:
          type: integer
          description: Timestamp
      required:
        - exchange
        - symbol
        - timestamp
      type: object
    orderbook:
      type: object
      properties:
        asks:
          type: array
          items:
            type: array
            items:
              type: number
        bids:
          type: array
          items:
            type: array
            items:
              type: number
        exchangeType:
          type: string
        symbol:
          type: string
    orderSide:
      type: string
      enum:
        - BUY
        - SELL
      description: "Order side"
    orderType:
      type: string
      enum:
        - MARKET
        - LIMIT
        - STOP_LOSS
        - STOP_LOSS_LIMIT
        - TAKE_PROFIT
        - TAKE_PROFIT_LIMIT
        - LIMIT_MAKER
        - QUOTED
      description: "Order type"
    orderStatus:
      type: string
      enum:
        - SUBMITTED
        - OPEN
        - PARTIALLY_FILLED
        - FILLED
        - CANCELED
        - PENDING_CANCEL
        - REJECTED
        - EXPIRED
        - ERROR
        - REVOKED
      description: "Order status"
    timeInForce:
      type: string
      enum:
        - DAY
        - GTC
        - GTX
        - GTD
        - OPG
        - CLS
        - IOC
        - FOK
        - GFA
        - GFS
        - GTM
        - MOO
        - MOC
        - EXT
      description: "Time in force"
    order:
      type: object
      properties:
        cost:
          type: number
          description: The total cost of this order.
        createdAt:
          type: integer
          description: "Created timestamp"
          example: 1703052635110
        exchangeType:
          $ref: "#/components/schemas/exchangeType"
        exchangeAccountId:
          type: string
          format: uuid
          description: "Exchange account ID"
        filled:
          type: number
          description: The quantity of this order that has been filled.
        orderId:
          type: string
          format: uuid
        orderSide:
          $ref: "#/components/schemas/orderSide"
        orderType:
          $ref: "#/components/schemas/orderType"
        positionId:
          type: string
          description: Position ID
          format: uuid
        price:
          type: number
          description: Price
        quantity:
          type: number
          description: Quantity
        status:
          $ref: "#/components/schemas/orderStatus"
        symbol:
          type: string
          description: Symbol
          example: BTC/USDT
        timeInForce:
          $ref: "#/components/schemas/timeInForce"
        updatedAt:
          type: integer
          description: Last updated timestamp
          example: 1703052635111
        userId:
          type: string
          description: "User ID"
          format: uuid
      required:
        - id
        - userId
        - exchangeAccountId
        - exchangeType
        - symbol
        - quantity
        - orderType
        - orderSide
        - timeInForce
        - cost
        - filled
        - status
        - updatedAt
        - createdAt
    quoteWithOrderCandidates:
      type: object
      properties:
        exchangeAccountId:
          type: string
          format: uuid
          description: "Exchange account ID"
        exchangeType:
          $ref: "#/components/schemas/exchangeType"
        baseCurrency:
          type: string
          description: Base currency
          example: BTC
        quoteCurrency:
          type: string
          description: Quote currency
          example: USDT
        askPrice:
          type: number
          description: Ask price
          example: 42859.99
        askQuantity:
          type: number
          description: Ask quantity
          example: 1.0
        bidPrice:
          type: number
          description: Bid price
          example: 42859.71
        bidQuantity:
          type: number
          description: Bid quantity
          example: 1.0
        timestamp:
          type: integer
          description: Timestamp
          example: 1632933600000
        orderCandidates:
          type: array
          items:
            type: object
            properties:
              orderSide:
                $ref: "#/components/schemas/orderSide"
              orderType:
                $ref: "#/components/schemas/orderType"
              quantity:
                type: number
                description: Quantity
                example: 1.0
              symbol:
                type: string
                description: Symbol
                example: BTC/USDT
        quoteId:
          type: string
          description: Unique quote id provided by the exchange
          example: "quote_id"
    exchangeBalance:
      type: object
      properties:
        exchangeAccountId:
          type: string
          description: "Exchange account ID"
          format: uuid
        balances:
          type: array
          description: "List of balances"
          items:
            type: object
            properties:
              asset:
                type: string
                description: "Asset"
                example: BTC/USDT
              free:
                type: number
                description: Free balance
                example: 1.0
              locked:
                type: number
                description: Locked balance
                example: 0.0
            required:
              - asset
              - free
              - locked
      required:
        - exchangeAccountId
        - balances
    exchangePosition:
      type: object
      properties:
        exchangeAccountId:
          type: string
          description: "Exchange account ID"
          format: uuid
        positions:
          type: array
          description: "List of positions"
          items:
            type: object
            properties:
              amount:
                type: number
                description: Amount
              cost:
                type: number
                description: Cost
              entryPrice:
                type: number
                description: Entry price
              positionSide:
                type: string
                description: Position side
                enum:
                  - LONG
                  - SHORT
              status:
                type: string
                description: Status
                enum:
                  - OPEN
                  # - CLOSED
              symbol:
                type: string
                description: Symbol
                example: BTC/USDT
            required:
              - amount
              - positionSide
              - status
              - symbol
            description: "List of positions"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
